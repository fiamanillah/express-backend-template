// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

enum Status {
  active
  inactive
}
model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String   @unique
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  role      Role     @default(user)
  status    Status   @default(active)
  password  String   @default("")
  bio       String?  
  instagram String?
  avatar    String?
  isEmailVerified Boolean @map("is_email_verified")@default(false)
  stripeCustomerId String?  @map("stripe_customer_id")  
  rewardFullAffiliateId String?  @map("reward_full_affiliate_id")
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Course {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title     String
  slug      String   @unique
  description String?
  shortDescription String? @map("short_description")
  thumbnailUrl String?  @map("thumbnail_url")
  diffucultyLevel String?  @map("diffuculty_level")
  estimatedDuration String?  @map("estimated_duration")
  isPublished Boolean @map("is_published")@default(false)
  basePrice Decimal @map("base_price")
  discount Decimal?
  discounedPrice Decimal? @map("discouned_price")
  hasCertification Boolean @map("has_certification")
  passPercentage Decimal? @map("pass_percentage")@default(70)
  isDeleted Boolean @map("is_deleted")@default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@map("courses")
}

